package gui;

import java.awt.BorderLayout;
import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.Window;
import java.awt.event.ActionListener;
import java.awt.event.MouseListener;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JTable;

/**
 *
 * @author FiruzzZ
 */
public class JDBuscador extends javax.swing.JDialog {

    public JDBuscador(Window owner, String title, boolean modal, JPanel panel) {
        super(owner, title, modal ? DEFAULT_MODALITY_TYPE : ModalityType.MODELESS);
        init(panel);
    }

    private void init(JPanel panel) {
        this.getContentPane().add(panel, BorderLayout.NORTH);
        pack();
        initComponents();
        ajustarAlPanel(panel.getWidth(), panel.getHeight());
        this.getRootPane().setDefaultButton(bBuscar);
    }

    private void ajustarAlPanel(int width, int height) {
        this.setSize(width + this.getWidth(), height + this.getHeight());
        this.setMinimumSize(new Dimension(this.getWidth(), this.getHeight()));
        this.setLocation(this.getOwner().getX() + 100, this.getOwner().getY() + 50);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      jScrollPane1 = new javax.swing.JScrollPane();
      jTable1 = new javax.swing.JTable();
      jPanel1 = new javax.swing.JPanel();
      bLimpiar = new javax.swing.JButton();
      bBuscar = new javax.swing.JButton();
      bImprimir = new javax.swing.JButton();
      jLabel1 = new javax.swing.JLabel();

      setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

      jTable1.setModel(new javax.swing.table.DefaultTableModel());
      jTable1.setRequestFocusEnabled(false);
      jTable1.addComponentListener(new java.awt.event.ComponentAdapter() {
         public void componentResized(java.awt.event.ComponentEvent evt) {
            jTable1ComponentResized(evt);
         }
      });
      jScrollPane1.setViewportView(jTable1);

      jPanel1.setMinimumSize(new java.awt.Dimension(143, 143));

      bLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/broom32x32.png"))); // NOI18N
      bLimpiar.setText("Limpiar");
      bLimpiar.setFocusable(false);
      bLimpiar.setName("limpiarBuscador"); // NOI18N

      bBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/lupa.png"))); // NOI18N
      bBuscar.setText("Buscar");
      bBuscar.setName("buscarBuscador"); // NOI18N

      bImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/impresora.png"))); // NOI18N
      bImprimir.setText("Imprimir");
      bImprimir.setName("imprimirBuscador"); // NOI18N

      javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
      jPanel1.setLayout(jPanel1Layout);
      jPanel1Layout.setHorizontalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
               .addComponent(bImprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(bBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(bLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );
      jPanel1Layout.setVerticalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(bLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(bBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(bImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(18, Short.MAX_VALUE))
      );

      jLabel1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
      jLabel1.setText("Nº Registros: 0");

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
               .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jLabel1))
            .addContainerGap())
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel1))
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

   private void jTable1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTable1ComponentResized
       jLabel1.setText("Nº Registros: " + getDtm().getRowCount());
   }//GEN-LAST:event_jTable1ComponentResized
   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton bBuscar;
   private javax.swing.JButton bImprimir;
   private javax.swing.JButton bLimpiar;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JPanel jPanel1;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JTable jTable1;
   // End of variables declaration//GEN-END:variables

    public void setListener(Object o) {
        bBuscar.addActionListener((ActionListener) o);
        bImprimir.addActionListener((ActionListener) o);
        bLimpiar.addActionListener((ActionListener) o);
        try {
            jTable1.addMouseListener((MouseListener) o);
        } catch (ClassCastException ex) {
            System.out.println(o.getClass() + " no implementa MouseListener");
        }
    }

    public JTable getjTable1() {
        return jTable1;
    }

    public javax.swing.table.DefaultTableModel getDtm() {
        return (javax.swing.table.DefaultTableModel) jTable1.getModel();
    }

    public void hideImprimir() {
        bImprimir.setVisible(false);
    }

    public void hideLimpiar() {
        bLimpiar.setVisible(false);
    }

    public JButton getbBuscar() {
        return bBuscar;
    }

    public JButton getbImprimir() {
        return bImprimir;
    }

    public JButton getbLimpiar() {
        return bLimpiar;
    }

    public void agrandar(int width, int heigth) {
        ajustarAlPanel(width, heigth);
    }

    /**
     * Cambia el estado de los 3 botones (Buscar, Imprimir, Limiar) Util para
     * que el usuario no le de como un pelotudo al botón generando 1kk de
     * consultas.
     *
     * @param bloquear <code>true</code> bloquea los botones
     */
    public void bloquearBotones(boolean bloquear) {
        bBuscar.setEnabled(!bloquear);
        bImprimir.setEnabled(!bloquear);
        bLimpiar.setEnabled(!bloquear);
    }
}
