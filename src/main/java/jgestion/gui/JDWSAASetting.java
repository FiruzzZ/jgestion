/*
 * JDWSAASetting.java
 *
 * Created on 01/07/2011, 10:14:50
 */
package jgestion.gui;

import java.awt.Desktop;
import java.awt.Window;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import jgestion.controller.AFIPWSController;
import jgestion.jpa.controller.ConfiguracionDAO;

/**
 *
 * @author FiruzzZ
 */
public class JDWSAASetting extends javax.swing.JDialog {

    /**
     * CRT X509 (otorgado por AFIP)
     */
    private File CRTFile;
    /**
     * p12 = private + X509
     */
    private File PKCS12File;

    /**
     * Mamarracho de clase.. pero funca..
     *
     * @param parent
     * @param modal
     */
    public JDWSAASetting(Window parent, boolean modal) {
        super(parent, modal ? DEFAULT_MODALITY_TYPE : ModalityType.MODELESS);
        setLocationRelativeTo(parent);
        initComponents();
        CRTFile = new File("./ws/cert.crt");
        PKCS12File = new File("./ws/cert.p12");
        if (CRTFile != null) {
            try {
                tfCRTPath.setText(CRTFile.exists() ? CRTFile.getCanonicalPath() : "..");
            } catch (IOException ex) {
                //ignore...
            }
        }
        if (PKCS12File != null) {
            try {
                tfPKCS12Path.setText(PKCS12File.exists() ? PKCS12File.getCanonicalPath() : ".");
            } catch (IOException ex) {
                //ignore...
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnBuscarCRT = new javax.swing.JButton();
        tfCRTPath = new javax.swing.JTextField();
        btnBuscarPKCS12 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        tfPKCS12Path = new javax.swing.JTextField();
        btnObtenerTicketAccess = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        informationLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        tfPassP12 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Certificación AFIP (WSAA)");

        jLabel1.setText("<html>Configuración de archivos para la utilización de los servicios Web de la AFIP</html>");

        jLabel3.setText("Ubicación del archivo de certificado digital X.509 (.CRT) otorgado por la AFIP");

        btnBuscarCRT.setText("Buscar");
        btnBuscarCRT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCRTActionPerformed(evt);
            }
        });

        tfCRTPath.setEditable(false);

        btnBuscarPKCS12.setText("Buscar");
        btnBuscarPKCS12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPKCS12ActionPerformed(evt);
            }
        });

        jLabel4.setText("Ubicación del archivo de certificado en formato pkcs12 (.p12). Clave privada + Certificado X.509");

        tfPKCS12Path.setEditable(false);

        btnObtenerTicketAccess.setText("Obtener TA");
        btnObtenerTicketAccess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObtenerTicketAccessActionPerformed(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(51, 51, 255));
        jLabel5.setText("<html><p>Si Ud. no dispone de estos archivos, presione en el botón Ayuda o dentro de la carpeta JGestion/WS/ se encuentra el archivo \"como_obtener_certificado.txt\".</p></html>");

        jLabel6.setForeground(new java.awt.Color(51, 51, 255));
        jLabel6.setText("<html><p>Una copia de estos 2 archivos serán guardados en la carpeta  \"./JGestion/ws/\", así como el TicketAccess (TA) generado por el AFIP.</p></html>");

        jLabel8.setText("Contraseña del certificado PKCS#12");

        jButton1.setText("Ayuda");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(informationLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 298, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(255, 255, 255))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tfCRTPath, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscarCRT))
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tfPKCS12Path, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscarPKCS12))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfPassP12, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnObtenerTicketAccess, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfCRTPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarCRT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPKCS12Path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarPKCS12))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tfPassP12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnObtenerTicketAccess)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(informationLabel)
                        .addGap(30, 30, 30))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarCRTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCRTActionPerformed
        try {
            CRTFile = openFileChooser("Archivo .CRT", CRTFile, "CRT");
            if (CRTFile != null) {
                tfCRTPath.setText(CRTFile.getCanonicalPath());
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(JDWSAASetting.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBuscarCRTActionPerformed

    private void btnObtenerTicketAccessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObtenerTicketAccessActionPerformed
        try {
            jProgressBar1.setMinimum(0);
            jProgressBar1.setMaximum(10);
            jProgressBar1.setIndeterminate(true);
            jProgressBar1.setStringPainted(true);
            jProgressBar1.setValue(1);
            jProgressBar1.setString("Copiando archivos..");
            jProgressBar1.setValue(2);
            String cert = "./ws/cert.crt";
            if (CRTFile.exists()) {
                createFile(CRTFile, cert);
            }
            jProgressBar1.setValue(3);
            String p12 = "./ws/cert.p12";
            if (PKCS12File.exists()) {
                createFile(PKCS12File, p12);
            }
            jProgressBar1.setValue(4);
            jProgressBar1.setString("Invocando ticket..");
            AFIPWSController af = new AFIPWSController(String.valueOf(tfPassP12.getPassword()));
            af.saveAFIPClave(String.valueOf(tfPassP12.getPassword()));
            jProgressBar1.setValue(6);
            jProgressBar1.setString("Creando ticket..");
            jProgressBar1.setValue(8);
            af.loadTicketAccessFromDB();
            jProgressBar1.setValue(10);
            jProgressBar1.setIndeterminate(false);
        } catch (Exception ex) {
            Logger.getLogger(JDWSAASetting.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_btnObtenerTicketAccessActionPerformed

    private void btnBuscarPKCS12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPKCS12ActionPerformed
        try {
            PKCS12File = openFileChooser("Archivo PKCS#12", PKCS12File, "p12");
            if (PKCS12File != null) {
                tfPKCS12Path.setText(PKCS12File.getCanonicalPath());
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(JDWSAASetting.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBuscarPKCS12ActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    File f;
    if (Desktop.isDesktopSupported()) {
        try {
            f = new File("./ws/como_obtener_certificado.txt");
            if (f.exists() && f.canRead()) {
                Desktop.getDesktop().open(f.getCanonicalFile());
            }
        } catch (IOException ex) {
            Logger.getLogger(JDWSAASetting.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedOperationException ex) {
            JOptionPane.showMessageDialog(this, "No tiene permitido abrir archivos");
        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(this, "No se encontró el archivo");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Su sistema operativo no soporta esta operación");
    }
}//GEN-LAST:event_jButton1ActionPerformed

    private File openFileChooser(String description, File fileDir, String... fileExtensionsAllow) throws IOException {
        JFileChooser fileChooser = new JFileChooser();
        File file = null;
        if (fileExtensionsAllow != null && fileExtensionsAllow.length > 0) {
            FileNameExtensionFilter filter = new FileNameExtensionFilter(description, fileExtensionsAllow);
            fileChooser.setFileFilter(filter);
            fileChooser.addChoosableFileFilter(filter);
        }
        fileChooser.setCurrentDirectory(fileDir);
        int stateFileChoosed = fileChooser.showOpenDialog(this);
        if (stateFileChoosed == JFileChooser.APPROVE_OPTION) {
            file = fileChooser.getSelectedFile();
        } else {
            JOptionPane.showMessageDialog(this,
                    "Algo salió mal...",
                    "State:" + stateFileChoosed, JOptionPane.ERROR_MESSAGE);
        }
        return file;
    }

    public static void createFile(File sourceFile, String pathName)
            throws FileNotFoundException, IOException {
        File toFile = new File(pathName);
        FileInputStream from = null;
        FileOutputStream to = null;
        try {
            from = new FileInputStream(sourceFile);
            to = new FileOutputStream(toFile);
            byte[] buffer = new byte[4096];
            int bytesRead;
            while ((bytesRead = from.read(buffer)) != -1) {
                to.write(buffer, 0, bytesRead); // write
            }
        } finally {
            if (from != null) {
                try {
                    from.close();
                } catch (IOException e) {
                    throw e;
                }
            }
            if (to != null) {
                try {
                    to.close();
                } catch (IOException e) {
                    throw e;
                }
            }
        }
    }

    public static void createFile(String bytesFile, String pathName)
            throws FileNotFoundException, IOException {
        File file = new File(pathName);
        FileOutputStream fileOutputStream = new FileOutputStream(file);
        fileOutputStream.write(bytesFile.getBytes());
        fileOutputStream.close();
        System.out.println("TRACE: File created at:" + file.getAbsolutePath());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarCRT;
    private javax.swing.JButton btnBuscarPKCS12;
    private javax.swing.JButton btnObtenerTicketAccess;
    private javax.swing.JLabel informationLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JTextField tfCRTPath;
    private javax.swing.JTextField tfPKCS12Path;
    private javax.swing.JPasswordField tfPassP12;
    // End of variables declaration//GEN-END:variables
}
