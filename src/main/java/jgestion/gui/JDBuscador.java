package jgestion.gui;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Window;
import java.awt.event.ActionListener;
import java.awt.event.MouseListener;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;

/**
 *
 * @author FiruzzZ
 */
public class JDBuscador extends javax.swing.JDialog {

    private Map<String, JTextField> resumeItems;

    public JDBuscador(Window owner, String title, boolean modal, JPanel panel) {
        super(owner, title, modal ? DEFAULT_MODALITY_TYPE : ModalityType.MODELESS);
        init(panel);
    }

    private void init(JPanel panel) {
        this.getContentPane().add(panel, BorderLayout.NORTH);
        pack();
        initComponents();
        panelInferior.setVisible(false);
        ajustarAlPanel(panel.getWidth(), panel.getHeight());
        this.getRootPane().setDefaultButton(btnBuscar);
        panelInferior.setLayout(new FlowLayout(FlowLayout.RIGHT));
        resumeItems = new HashMap<String, JTextField>(0);
    }

    private void ajustarAlPanel(int width, int height) {
        this.setSize(width + this.getWidth(), height + this.getHeight());
        this.setMinimumSize(new Dimension(this.getWidth(), this.getHeight()));
        if (this.getOwner() != null) {
            this.setLocation(this.getOwner().getX() + 100, this.getOwner().getY() + 50);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnBuscar = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        btnToExcel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        panelInferior = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel());
        jTable1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jTable1ComponentResized(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.setMinimumSize(new java.awt.Dimension(143, 143));

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/lupa.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.setName("buscarBuscador"); // NOI18N

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/impresora.png"))); // NOI18N
        btnImprimir.setText("Imprimir");
        btnImprimir.setName("imprimirBuscador"); // NOI18N

        btnToExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/32px_excel.png"))); // NOI18N
        btnToExcel.setText("To  Excel");
        btnToExcel.setFocusable(false);
        btnToExcel.setName("limpiarBuscador"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnImprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnToExcel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnToExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel1.setText("Nº Registros: 0");

        javax.swing.GroupLayout panelInferiorLayout = new javax.swing.GroupLayout(panelInferior);
        panelInferior.setLayout(panelInferiorLayout);
        panelInferiorLayout.setHorizontalGroup(
            panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelInferiorLayout.setVerticalGroup(
            panelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 31, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelInferior, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelInferior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   private void jTable1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTable1ComponentResized
       jLabel1.setText("Nº Registros: " + getDtm().getRowCount());
   }//GEN-LAST:event_jTable1ComponentResized
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnToExcel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel panelInferior;
    // End of variables declaration//GEN-END:variables

    public void setListener(Object o) {
        btnBuscar.addActionListener((ActionListener) o);
        btnImprimir.addActionListener((ActionListener) o);
        btnToExcel.addActionListener((ActionListener) o);
        try {
            jTable1.addMouseListener((MouseListener) o);
        } catch (ClassCastException ex) {
            System.out.println(o.getClass() + " no implementa MouseListener");
        }
    }

    public JTable getjTable1() {
        return jTable1;
    }

    public javax.swing.table.DefaultTableModel getDtm() {
        return (javax.swing.table.DefaultTableModel) jTable1.getModel();
    }

    public void hideImprimir() {
        btnImprimir.setVisible(false);
    }

    public void hideBtnToExcel() {
        btnToExcel.setVisible(false);
    }

    public JButton getBtnBuscar() {
        return btnBuscar;
    }

    public JButton getBtnImprimir() {
        return btnImprimir;
    }

    public JButton getBtnToExcel() {
        return btnToExcel;
    }

    public JPanel getPanelInferior() {
        return panelInferior;
    }

    public void agrandar(int width, int heigth) {
        ajustarAlPanel(width, heigth);
    }

    /**
     * Cambia el estado de los 3 botones (Buscar, Imprimir, Limiar) Util para
     * que el usuario no le de como un pelotudo al botón generando 1kk de
     * consultas.
     *
     * @param bloquear <code>true</code> bloquea los botones
     */
    public void bloquearBotones(boolean bloquear) {
        btnBuscar.setEnabled(!bloquear);
        btnImprimir.setEnabled(!bloquear);
        btnToExcel.setEnabled(!bloquear);
    }

    /**
     * Sirve para agregar JTextFields al pié del buscador, normalmente para
     * representar sumatorias y totales. Los componentes se agregan alineados a
     * la derecha y los demás van desplazando a los anteriores hacia la izq
     *
     * @param labelText label text and the key with which the specified
     * JTextField is to be associated
     * @param tf will be setted as {@link JTextField#setEditable(false)} and
     * {@link JTextField#setHorizontalAlignment(JTextField.RIGHT)}
     */
    public void addResumeItem(String labelText, JTextField tf) {
        tf.setEditable(false);
        tf.setHorizontalAlignment(JTextField.RIGHT);
        resumeItems.put(labelText, tf);
        panelInferior.add(new JLabel(labelText));
        panelInferior.add(tf);
        panelInferior.validate();
    }

    public Map<String, JTextField> getResumeItems() {
        return Collections.unmodifiableMap(resumeItems);
    }
}
